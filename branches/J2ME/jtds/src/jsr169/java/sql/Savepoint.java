// jTDS JDBC Driver for Microsoft SQL Server and Sybase
// Copyright (C) 2005 The jTDS Project
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
package java.sql;

/**
 * The representation of a savepoint, which is a point within the current
 * transaction that can be referenced from the <code>Connection.rollback</code>
 * method. When a transaction is rolled back to a savepoint all changes made
 * after that savepoint are undone.
 * <p/>
 * Savepoints can be either named or unnamed. Unnamed savepoints are identified
 * by an ID generated by the underlying data source.
 */
public interface Savepoint {

    /**
     * Retrieves the generated ID for the savepoint that this Savepoint object
     * represents.
     *
     * @return the numeric ID of this savepoint
     * @throws SQLException if this is a named savepoint
     */
    int getSavepointId() throws SQLException;

    /**
     * Retrieves the name of the savepoint that this Savepoint object represents.
     *
     * @return the name of this savepoint
     * @throws SQLException if this is an un-named savepoint
     */
    String getSavepointName() throws SQLException;
}
