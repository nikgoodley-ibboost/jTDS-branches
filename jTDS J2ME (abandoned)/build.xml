<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="compile" name="jtds-j2me">

  <path id="libs">
    <fileset dir="lib" includes="*.jar"/>
  </path>

  <target name="init">
    <tstamp/>

    <property name="build" value="build"/>

    <property name="build.compiler" value="modern"/>
    <property name="javac.debug" value="on"/>
    <property name="javac.optimize" value="off"/>

    <property name="src" value="src"/>
    <property name="dist" value="dist"/>
    <property name="test" value="test"/>

    <property name="version" value="1.0.2"/>
    
    <property file="build.properties"/>
  </target>

  <target name="clean" depends="init">
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

  <target name="prepare" depends="init">
    <mkdir dir="${build}"/>
    <mkdir dir="${build}/classes"/>
    <mkdir dir="${build}/src"/>

    <copy todir="${build}/src">
      <fileset dir="${src}/main" includes="**/*.java"/>
    </copy>
    <copy todir="${build}/src">
      <fileset dir="${src}/test" includes="**/*.java"/>
    </copy>
    <copy todir="${build}/classes">
      <fileset dir="${src}/main" includes="**/*.properties"/>
    </copy>
  </target>

  <target name="compile" depends="init,prepare">
    <javac destdir="${build}/classes" srcdir="${build}/src" classpathref="libs" bootclasspath="${j2me.classes}" debug="${javac.debug}" optimize="${javac.optimize}"/>
  </target>

  <target name="javadoc" depends="prepare">
    <mkdir dir="${build}/doc"/>
    <javadoc sourcepath="${build}/src" destdir="${build}/doc" packagenames="net.sourceforge.jtds.*" Author="true"
             Doctitle="jTDS J2ME API Documentation" Use="true" Version="true" bottom="Generated on ${TODAY}"
             Windowtitle="jTDS J2ME API" Private="true" classpathref="libs">
      <tag name="todo" description="To do:"/>
      <tag name="created" description="Created:"/>
    </javadoc>
  </target>

  <target name="test" depends="compile">
    <taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask"/>

    <junit fork="no" haltonfailure="no" printsummary="yes">
      <classpath>
        <pathelement location="build/classes"/>
        <path refid="libs"/>
      </classpath>
      <formatter type="plain"/>
      <batchtest>
        <fileset dir="${build}/src">
          <include name="**/*Test.java"/>
          <exclude name="**/AllTests.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="dist" depends="clean,compile,javadoc">
    <mkdir dir="${dist}"/>
    <!-- Runtime jar -->
    <jar basedir="${build}/classes"
         excludes="net/sourceforge/jtds/test/*.class"
         includes="**/*"
         jarfile="${build}/${ant.project.name}-${version}.jar">
        <manifest>
            <attribute name="Implementation-Title" value="jTDS JDBC Driver for J2ME"/>
            <attribute name="Implementation-Version" value="${version}"/>
            <attribute name="Implementation-URL" value="http://jtds.sourceforge.net"/>
            <attribute name="Specification-Title" value="JSR-169"/>
            <attribute name="Specification-Version" value="3.0"/>
            <attribute name="Main-Class" value="net.sourceforge.jtds.jdbc.Driver"/>
        </manifest>
    </jar>

    <!-- Source package -->
    <copy todir="${dist}/tmp/doc">
      <fileset dir="${build}/doc" includes="**/*"/>
    </copy>
    <mkdir dir="${dist}/tmp"/>
    <copy todir="${dist}/tmp">
      <fileset dir="." includes="README,README.SSL,CHANGELOG,LICENSE,*.bat,*.sh,*.xml,*.properties,src/**/*,lib/**/*,html/**/*,conf/**/*"/>
    </copy>
    <zip basedir="${dist}/tmp" includes="**/*" zipfile="${dist}/${ant.project.name}-${version}-src.zip"/>
    <delete dir="${dist}/tmp"/>

    <!-- Binary package -->
    <mkdir dir="${dist}/tmp"/>
    <copy todir="${dist}/tmp">
      <fileset dir="." includes="README,README.SSL,CHANGELOG,LICENSE,conf/**/*.xml,html/**/*"/>
      <fileset dir="${build}" includes="*.jar"/>
    </copy>
    <zip basedir="${dist}/tmp" includes="**/*" zipfile="${dist}/${ant.project.name}-${version}-dist.zip"/>
    <delete dir="${dist}/tmp"/>
  </target>

</project>
